openapi: 3.0.3
info:
  title: Parsec Server
  description: |
    Parsec is tooling that measures the `PUT` and `GET` performance of the IPFS public DHT. The setup is split into
    two components: the scheduler and the server. This document specifies the API contract that the server should
    implement so that the scheduler can orchestrate any desired sequence of publication and retrieval steps.
  version: 0.1.0
servers:
  - url: 'http'
paths:
  /provide:
    post:
      tags:
        - Content Routing
      summary: Publishes a provider record for the given content.
      description: |
        This endpoint accepts a binary blob, generates a CID from it,
        and publishes the corresponding provider record. Upon completion
        it returns the generated CID, the duration it took
        to publish the provider record, any error that may have occurred,
        and the number of peers in the routing table upon publication.
      parameters:
        - name: x-scheduler-id
          in: header
          description: An identifier of the scheduler that's doing the request. This value is used for prometheus metrics.
          example: optprov
          schema:
            type: string
      requestBody:
        description: |
          The request body just contains the data for which the server
          should publish a provide record.
        content:
          application/json:
            schema:
              required:
                - Content
              properties:
                Content:
                  type: string
                  description: |
                    Binary data the server should use to generate a CID and publish a provider record for.
                    The Go implementation generates 1024 bytes of random data and puts into this JSON field.
                Target:
                  type: string
                  enum:
                    - DHT
                    - IPNI
                  default: DHT
                  description: |
                    Specifies the provide target type. If set to DHT (default when property != IPNI) the server
                    will write provider records to the DHT. If set to IPNI, the server announces an advertisement
                    to an InterPlanetary Network Indexer. To which specifically is part of the servers configuration
                    and the client must know how the server is configured to know the specific IPNI (e.g, whether
                    it's cid.contact or another one)
      responses:
        '200':
          description: |
            The result of the provider record publication. Any error that might have happened during that
            process should be passed to the `Error` field. For the sake of the measurement we still consider
            an erroneous publication a valid data point. Hence, a `200` status code.
          content:
            application/json:
              schema:
                required:
                  - CID
                  - Duration
                  - Error
                  - RoutingTableSize
                properties:
                  CID:
                    type: string
                    example: bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku
                  Duration:
                    type: integer
                    description: The time it took to write all provider records in nanoseconds (default Go formatting of `time.Duration`). E.g., `1000000000` for 1s.
                    example: 1000000000
                  Error:
                    type: string
                    description: Just any text that indicates the error reason. If no error happened, pass an empty string.
                  RoutingTableSize:
                    type: integer
                    description: The number of peers in the routing table. Either right before or right after the publication. Doesn't really matter.
                    example: 202
        '400':
          description: E.g., the given JSON was malformed.

  /retrieve/{cid}:
    post:
      tags:
        - Content Routing
      summary: Looks up provider records for the given CID.
      description: |
        This endpoint takes the CID from the path component, looks up provider records in the DHT,
        and measures the time it took to find the first one.
      parameters:
        - name: x-scheduler-id
          in: header
          description: An identifier of the scheduler that's doing the request. This value is used for prometheus metrics.
          example: fullrt
          schema:
            type: string
        - name: cid
          in: path
          description: CID to look up
          example: bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku
          required: true
          schema:
            type: string
      requestBody:
        description: |
          This is a relict from development. Servers can ignore the request body.
          Right now the scheduler would send an empty JSON object.
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: |
            The result of the provider record look up. Any error that might have happened during that
            process should be passed to the `Error` field. For the sake of the measurement we still consider
            an erroneous retrieval a valid data point. Hence, a `200` status code.
          content:
            application/json:
              schema:
                required:
                  - CID
                  - Duration
                  - Error
                  - RoutingTableSize
                properties:
                  CID:
                    type: string
                    example: bafybeihdwdcefgh4dqkjv67uzcmw7ojee6xedzdetojuzjevtenxquvyku
                  Duration:
                    type: integer
                    description: The time it took to **find the first** provider records in nanoseconds (default Go formatting of `time.Duration`). E.g., `1000000000` for 1s.
                    example: 1000000000
                  Error:
                    type: string
                    description: |
                      Just any text that indicates the error reason. If no error happened, pass an empty string.
                      If the lookup algorithm couldn't find a provider record but didn't really encounter
                      an error, this field should be mapped to the value `not found`.
                  RoutingTableSize:
                    type: integer
                    description: The number of peers in the routing table. Either right before or right after the publication. Doesn't really matter.
                    example: 202
        '400':
          description: E.g., the JSON is malformed or we couldn't parse the given CID.


  /readiness:
    get:
      tags:
        - Operations
      summary: Indicates readiness for accepting publication or retrieval requests.
      description: |
        If the server is ready to accept publication or retrieval requests this endpoint returns
        a `2xx` status code. Any other status code indicates non-readiness.

        Note: the scheduler checks the response but functionality-wise this is a bit redundant with
        the database entry of the server.
      responses:
        '200':
          description: The server is ready to accept publication or retrieval requests.
